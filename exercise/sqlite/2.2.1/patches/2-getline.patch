diff --git a/src/shell.c b/src/shell.c
index 939bf3b..bb78777 100644
--- a/src/shell.c
+++ b/src/shell.c
@@ -27,7 +27,7 @@
 # include <readline/readline.h>
 # include <readline/history.h>
 #else
-# define readline(p) getline(p,stdin)
+# define readline(p) local_getline(p,stdin)
 # define add_history(X) 
 #endif
 
@@ -47,7 +47,7 @@ static sqlite *db = 0;
 ** The interface is like "readline" but no command-line editing
 ** is done.
 */
-static char *getline(char *zPrompt, FILE *in){
+static char *local_getline(char *zPrompt, FILE *in){
   char *zLine;
   int nLine;
   int n;
@@ -92,7 +92,7 @@ static char *getline(char *zPrompt, FILE *in){
 ** Retrieve a single line of input text.  "isatty" is true if text
 ** is coming from a terminal.  In that case, we issue a prompt and
 ** attempt to use "readline" for command-line editing.  If "isatty"
-** is false, use "getline" instead of "readline" and issue no prompt.
+** is false, use "local_getline" instead of "readline" and issue no prompt.
 **
 ** zPrior is a string of prior text retrieved.  If not the empty
 ** string, then issue a continuation prompt.
@@ -101,7 +101,7 @@ static char *one_input_line(const char *zPrior, FILE *in){
   char *zPrompt;
   char *zResult;
   if( in!=0 ){
-    return getline(0, in);
+    return local_getline(0, in);
   }
   if( zPrior && zPrior[0] ){
     zPrompt = "   ...> ";
