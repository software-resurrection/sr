From 91d335e59e6f3084beaf45117a614d50f7d3cda3 Mon Sep 17 00:00:00 2001
From: Abhishek Dutta <thelinuxmaniac@gmail.com>
Date: Wed, 18 Sep 2024 12:04:18 +0100
Subject: [PATCH 3/5] fix for static declaration of 'acosh' follows non-static
 declaration

---
 numpy/core/src/umathmodule.c.src | 38 ++++++++++++++++----------------
 1 file changed, 19 insertions(+), 19 deletions(-)

diff --git a/numpy/core/src/umathmodule.c.src b/numpy/core/src/umathmodule.c.src
index a8c432f..4d3312b 100644
--- a/numpy/core/src/umathmodule.c.src
+++ b/numpy/core/src/umathmodule.c.src
@@ -76,13 +76,13 @@ static float ldexpf(float x, int i)
 #endif
 
 #ifndef HAVE_INVERSE_HYPERBOLIC
-static double acosh(double x)
+double acosh(double x)
 {
     return 2*log(sqrt((x+1.0)/2)+sqrt((x-1.0)/2));
 }
 
 double log1p(double);
-static double asinh(double xx)
+double asinh(double xx)
 {
     double x, d;
     int sign;
@@ -102,7 +102,7 @@ static double asinh(double xx)
     return sign*log1p(x*(1.0 + x/(d+1)));
 }
 
-static double atanh(double x)
+double atanh(double x)
 {
     return 0.5*log1p(2.0*x/(1.0-x));
 }
@@ -131,7 +131,7 @@ float sqrtf(float);
 #ifdef acoshf
 #undef acoshf
 #endif
-static float acoshf(float x)
+float acoshf(float x)
 {
     return 2*logf(sqrtf((x+1)/2)+sqrtf((x-1)/2));
 }
@@ -139,7 +139,7 @@ static float acoshf(float x)
 #ifdef asinhf
 #undef asinhf
 #endif
-static float asinhf(float xx)
+float asinhf(float xx)
 {
     float x, d;
     int sign;
@@ -162,7 +162,7 @@ static float asinhf(float xx)
 #ifdef atanhf
 #undef atanhf
 #endif
-static float atanhf(float x)
+float atanhf(float x)
 {
     return log1pf(2*x/(1-x))/2;
 }
@@ -170,7 +170,7 @@ static float atanhf(float x)
 #ifdef acoshf
 #undef acoshf
 #endif
-static float acoshf(float x)
+float acoshf(float x)
 {
     return (float)acosh((double)(x));
 }
@@ -178,7 +178,7 @@ static float acoshf(float x)
 #ifdef asinhf
 #undef asinhf
 #endif
-static float asinhf(float x)
+float asinhf(float x)
 {
     return (float)asinh((double)(x));
 }
@@ -186,7 +186,7 @@ static float asinhf(float x)
 #ifdef atanhf
 #undef atanhf
 #endif
-static float atanhf(float x)
+float atanhf(float x)
 {
     return (float)atanh((double)(x));
 }
@@ -211,7 +211,7 @@ longdouble log1pl(longdouble);
 #ifdef acoshl
 #undef acoshl
 #endif
-static longdouble acoshl(longdouble x)
+longdouble acoshl(longdouble x)
 {
     return 2*logl(sqrtl((x+1.0)/2)+sqrtl((x-1.0)/2));
 }
@@ -219,7 +219,7 @@ static longdouble acoshl(longdouble x)
 #ifdef asinhl
 #undef asinhl
 #endif
-static longdouble asinhl(longdouble xx)
+longdouble asinhl(longdouble xx)
 {
     longdouble x, d;
     int sign;
@@ -242,7 +242,7 @@ static longdouble asinhl(longdouble xx)
 #ifdef atanhl
 #undef atanhl
 #endif
-static longdouble atanhl(longdouble x)
+longdouble atanhl(longdouble x)
 {
     return 0.5*log1pl(2.0*x/(1.0-x));
 }
@@ -252,7 +252,7 @@ static longdouble atanhl(longdouble x)
 #ifdef acoshl
 #undef acoshl
 #endif
-static longdouble acoshl(longdouble x)
+longdouble acoshl(longdouble x)
 {
     return (longdouble)acosh((double)(x));
 }
@@ -260,7 +260,7 @@ static longdouble acoshl(longdouble x)
 #ifdef asinhl
 #undef asinhl
 #endif
-static longdouble asinhl(longdouble x)
+longdouble asinhl(longdouble x)
 {
     return (longdouble)asinh((double)(x));
 }
@@ -268,7 +268,7 @@ static longdouble asinhl(longdouble x)
 #ifdef atanhl
 #undef atanhl
 #endif
-static longdouble atanhl(longdouble x)
+longdouble atanhl(longdouble x)
 {
     return (longdouble)atanh((double)(x));
 }
@@ -282,7 +282,7 @@ static longdouble atanhl(longdouble x)
 extern double hypot(double, double);
 #endif
 #else
-static double hypot(double x, double y)
+double hypot(double x, double y)
 {
     double yx;
 
@@ -304,7 +304,7 @@ static double hypot(double x, double y)
 
 
 #ifndef HAVE_RINT
-static double
+double
 rint (double x)
 {
     double y, r;
@@ -576,7 +576,7 @@ static double expm1(double x)
 #ifdef expml1
 #undef expml1
 #endif
-static longdouble expm1l(longdouble x)
+longdouble expm1l(longdouble x)
 {
     longdouble u = expl(x);
     if (u == 1.0) {
@@ -593,7 +593,7 @@ static longdouble expm1l(longdouble x)
 #ifdef expm1f
 #undef expm1f
 #endif
-static float expm1f(float x)
+float expm1f(float x)
 {
     float u = expf(x);
     if (u == 1) {
-- 
2.39.2

